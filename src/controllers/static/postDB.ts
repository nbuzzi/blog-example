import { uuid } from 'uuidv4';
import { Comment } from '../posts/models/comment';
import { Post } from '../posts/models/post';
import { GenericDatabase } from './base';

const posts: Post[] = [
    {
        author: 'Admin',
        comments: [],
        // tslint:disable-next-line:max-line-length
        content: `<section class="section"> <h1>Get started with Docker for Windows</h1> <span class="reading-time" title="Estimated reading time"> <span class="reading-time-label">Estimated reading time: </span> 21 minutes </span> <p>Welcome to Docker Desktop!</p> <p>The <em>Docker Desktop for Windows</em> section contains information about the Docker Desktop Community Stable release. For information about features available in Edge releases, see the <a href="/docker-for-windows/edge-release-notes/">Edge release notes</a>. For information about Docker Desktop Enterprise (DDE) releases, see <a href="/desktop/enterprise/">Docker Desktop Enterprise</a>.</p> <p>Docker is a full development platform to build, run, and share containerized applications. Docker Desktop is the best way to get started with Docker <em>on Windows</em>.</p> <p>See <a href="/docker-for-windows/install/" target="_blank" class="_">Install Docker Desktop</a> for download information, system requirements, and installation instructions.</p> <h2 id="test-your-installation">Test your installation<a href="#test-your-installation" class="anchorLink">üîó</a></h2> <ol> <li> <p>Open a terminal window (Command Prompt or PowerShell, <em>but not</em> PowerShell ISE).</p> </li> <li> <p>Run <code class="highlighter-rouge">docker --version</code> to ensure that you have a supported version of Docker:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> docker <span class="nt">--version</span> Docker version 19.03.1 </code></pre></div> </div> </li> <li> <p>Pull the <a href="https://hub.docker.com/r/library/hello-world/">hello-world image</a> from Docker Hub and run a container:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> docker run hello-world docker : Unable to find image <span class="s1">'hello-world:latest'</span> locally latest: Pulling from library/hello-world 1b930d010525: Pull <span class="nb">complete </span>Digest: sha256:c3b4ada4687bbaa170745b3e4dd8ac3f194ca95b2d0518b417fb47e5879d9b5f Status: Downloaded newer image <span class="k">for </span>hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. ... </code></pre></div> </div> </li> <li> <p>List the <code class="highlighter-rouge">hello-world</code> <em>image</em> that was downloaded from Docker Hub:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> docker image <span class="nb">ls</span> </code></pre></div> </div> </li> <li> <p>List the <code class="highlighter-rouge">hello-world</code> <em>container</em> (that exited after displaying ‚ÄúHello from Docker!‚Äù):</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> docker container <span class="nb">ls</span> <span class="nt">--all</span> </code></pre></div> </div> </li> <li> <p>Explore the Docker help pages by running some help commands:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> docker <span class="nt">--help</span> <span class="o">&gt;</span> docker container <span class="nt">--help</span> <span class="o">&gt;</span> docker container <span class="nb">ls</span> <span class="nt">--help</span> <span class="o">&gt;</span> docker run <span class="nt">--help</span> </code></pre></div> </div> </li> </ol> <h2 id="explore-the-application">Explore the application<a href="#explore-the-application" class="anchorLink">üîó</a></h2> <p>In this section, we demonstrate the ease and power of Dockerized applications by running something more complex, such as an OS and a webserver.</p> <ol> <li> <p>Pull an image of the <a href="https://hub.docker.com/r/_/ubuntu/">Ubuntu OS</a> and run an interactive terminal inside the spawned container:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="o">&gt;</span> docker run <span class="nt">--interactive</span> <span class="nt">--tty</span> ubuntu bash docker : Unable to find image <span class="s1">'ubuntu:latest'</span> locally latest: Pulling from library/ubuntu 22e816666fd6: Pull <span class="nb">complete </span>079b6d2a1e53: Pull <span class="nb">complete </span>11048ebae908: Pull <span class="nb">complete </span>c58094023a2e: Pull <span class="nb">complete </span>Digest: sha256:a7b8b7b33e44b123d7f997bd4d3d0a59fafc63e203d17efedf09ff3f6f516152 Status: Downloaded newer image <span class="k">for </span>ubuntu:latest </code></pre></div> </div> <blockquote> <p>Do not use PowerShell ISE</p> <p>Interactive terminals do not work in PowerShell ISE (but they do in PowerShell). See <a href="https://github.com/docker/for-win/issues/223">docker/for-win/issues/223</a>.</p> </blockquote> </li> <li> <p>You are in the container. At the root <code class="highlighter-rouge">#</code> prompt, check the <code class="highlighter-rouge">hostname</code> of the container:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> root@8aea0acb7423:/# hostname 8aea0acb7423 </code></pre></div> </div> <p>Notice that the hostname is assigned as the container ID (and is also used in the prompt).</p> </li> <li> <p>Exit the shell with the <code class="highlighter-rouge">exit</code> command (which also stops the container):</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> root@8aea0acb7423:/# <span class="nb">exit</span> <span class="o">&gt;</span> </code></pre></div> </div> </li> <li> <p>List containers with the <code class="highlighter-rouge">--all</code> option (because no containers are running).</p> <p>The <code class="highlighter-rouge">hello-world</code> container (randomly named, <code class="highlighter-rouge">relaxed_sammet</code>) stopped after displaying its message. The <code class="highlighter-rouge">ubuntu</code> container (randomly named, <code class="highlighter-rouge">laughing_kowalevski</code>) stopped when you exited the container.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="o">&gt;</span> docker container <span class="nb">ls</span> <span class="nt">--all</span> CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 8aea0acb7423 ubuntu <span class="s2">"bash"</span> 2 minutes ago Exited <span class="o">(</span>0<span class="o">)</span> 2 minutes ago laughing_kowalevski 45f77eb48e78 hello-world <span class="s2">"/hello"</span> 3 minutes ago Exited <span class="o">(</span>0<span class="o">)</span> 3 minutes ago relaxed_sammet </code></pre></div> </div> </li> <li> <p>Pull and run a Dockerized <a href="https://hub.docker.com/_/nginx/">nginx</a> web server that we name, <code class="highlighter-rouge">webserver</code>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="o">&gt;</span> docker run <span class="nt">--detach</span> <span class="nt">--publish</span> 80:80 <span class="nt">--name</span> webserver nginx Unable to find image <span class="s1">'nginx:latest'</span> locally latest: Pulling from library/nginx fdd5d7827f33: Pull <span class="nb">complete </span>a3ed95caeb02: Pull <span class="nb">complete </span>716f7a5f3082: Pull <span class="nb">complete </span>7b10f03a0309: Pull <span class="nb">complete </span>Digest: sha256:f6a001272d5d324c4c9f3f183e1b69e9e0ff12debeb7a092730d638c33e0de3e Status: Downloaded newer image <span class="k">for </span>nginx:latest dfe13c68b3b86f01951af617df02be4897184cbf7a8b4d5caf1c3c5bd3fc267f </code></pre></div> </div> </li> <li> <p>Point your web browser at <code class="highlighter-rouge">http://localhost</code> to display the nginx start page. (You don‚Äôt need to append <code class="highlighter-rouge">:80</code> because you specified the default HTTP port in the <code class="highlighter-rouge">docker</code> command.)</p> <p><img src="/docker-for-windows/images/nginx-homepage.png" alt="Run nginx edge"></p> </li> <li> <p>List only your <em>running</em> containers:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="o">&gt;</span> docker container <span class="nb">ls </span>CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0e788d8e4dfd nginx <span class="s2">"nginx -g 'daemon of‚Ä¶"</span> 2 minutes ago Up 2 minutes 0.0.0.0:80-&gt;80/tcp webserver </code></pre></div> </div> </li> <li> <p>Stop the running nginx container by the name we assigned it, <code class="highlighter-rouge">webserver</code>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="o">&gt;</span> docker container stop webserver </code></pre></div> </div> </li> <li> <p>Remove all three containers by their names -- the latter two names will differ for you:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="o">&gt;</span> docker container rm webserver laughing_kowalevski relaxed_sammet </code></pre></div> </div> </li> </ol> <h2 id="docker-settings-dialog">Docker Settings dialog<a href="#docker-settings-dialog" class="anchorLink">üîó</a></h2> <p>The <strong>Docker Desktop</strong> menu allows you to configure your Docker settings such as installation, updates, version channels, Docker Hub login, and more.</p> <p>This section explains the configuration options accessible from the <strong>Settings</strong> dialog.</p> <ol> <li> <p>Open the Docker Desktop menu by clicking the Docker icon in the Notifications area (or System tray):</p> <p><img src="/docker-for-windows/images/whale-icon-systray-hidden.png" alt="Showing hidden apps in the taskbar" width="250px"></p> </li> <li> <p>Select <strong>Settings</strong> to open the Settings dialog:</p> <p><img src="/docker-for-windows/images/docker-menu-settings.png" alt="Docker Desktop popup menu" width="300px"></p> </li> </ol> <h3 id="general">General<a href="#general" class="anchorLink">üîó</a></h3> <p>On the <strong>General</strong> tab of the Settings dialog, you can configure when to start and update Docker.</p> <p><img src="/docker-for-windows/images/settings-general.png" alt="Settings" width="750px"></p> <ul> <li> <p><strong>Start Docker when you log in</strong> - Automatically start Docker Desktop upon Windows system login.</p> </li> <li> <p><strong>Automatically check for updates</strong> - By default, Docker Desktop automatically checks for updates and notifies you when an update is available. Click <strong>OK</strong> to accept and install updates (or cancel to keep the current version). You can manually update by choosing <strong>Check for Updates</strong> from the main Docker menu.</p> </li> <li> <p><strong>Expose daemon on tcp://localhost:2375 without TLS</strong> - Click this option to enable legacy clients to connect to the Docker daemon. You must use this option with caution as exposing the daemon without TLS can result in remote code execution attacks.</p> </li> <li> <p><strong>Send usage statistics</strong> - By default, Docker Desktop sends diagnostics, crash reports, and usage data. This information helps Docker improve and troubleshoot the application. Clear the check box to opt out. Docker may periodically prompt you for more information.</p> <p>Click <strong>Switch to the Edge version</strong> to learn more about Docker Desktop Edge releases.</p> </li> </ul> <h3 id="resources">Resources<a href="#resources" class="anchorLink">üîó</a></h3> <p>The <strong>Resources</strong> tab allows you to configure CPU, memory, disk, proxies, network, and other resources. Different settings are available for configuration depending on whether you are using Linux containers in WSL 2 mode, Linux containers in Hyper-V mode, or Windows containers.</p> <p><img src="/docker-for-windows/images/settings-resources.png" alt="Resources" width="750px"></p> <h4 id="advanced">Advanced</h4> <blockquote> <p><strong>Note</strong></p> <p>The Advanced tab is only available in Hyper-V mode, because in WSL 2 mode and Windows container mode these resources are managed by Windows. In WSL 2 mode, you can configure limits on the memory, CPU, and swap size allocated to the <a href="https://docs.microsoft.com/en-us/windows/wsl/release-notes#build-18945">WSL 2 utility VM</a>.</p> </blockquote> <p>Use the <strong>Advanced</strong> tab to limit resources available to Docker.</p> <p><strong>CPUs</strong>: By default, Docker Desktop is set to use half the number of processors available on the host machine. To increase processing power, set this to a higher number; to decrease, lower the number.</p> <p><strong>Memory</strong>: By default, Docker Desktop is set to use <code class="highlighter-rouge">2</code> GB runtime memory, allocated from the total available memory on your machine. To increase the RAM, set this to a higher number. To decrease it, lower the number.</p> <p><strong>Swap</strong>: Configure swap file size as needed. The default is 1 GB.</p> <p><strong>Disk image size</strong>: Specify the size of the disk image.</p> <p><strong>Disk image location</strong>: Specify the location of the Linux volume where containers and images are stored.</p> <p>You can also move the disk image to a different location. If you attempt to move a disk image to a location that already has one, you get a prompt asking if you want to use the existing image or replace it.</p> <h4 id="file-sharing">File sharing</h4> <blockquote> <p><strong>Note</strong></p> <p>The File sharing tab is only available in Hyper-V mode, because in WSL 2 mode and Windows container mode all files are automatically shared by Windows.</p> </blockquote> <p>Use File sharing to allow local directories on Windows to be shared with Linux containers. This is especially useful for editing source code in an IDE on the host while running and testing the code in a container. Note that configuring file sharing is not necessary for Windows containers, only <a href="#switch-between-windows-and-linux-containers">Linux containers</a>. If a directory is not shared with a Linux container you may get <code class="highlighter-rouge">file not found</code> or <code class="highlighter-rouge">cannot start service</code> errors at runtime. See <a href="/docker-for-windows/troubleshoot/#volume-mounting-requires-shared-folders-for-linux-containers">Volume mounting requires shared folders for Linux containers</a>.</p> <p>File share settings are:</p> <ul> <li> <p><strong>Add a Directory</strong>: Click <code class="highlighter-rouge">+</code> and navigate to the directory you want to add.</p> </li> <li> <p><strong>Apply &amp; Restart</strong> makes the directory available to containers using Docker‚Äôs bind mount (<code class="highlighter-rouge">-v</code>) feature.</p> </li> </ul> <blockquote> <p>Tips on shared folders, permissions, and volume mounts</p> <ul> <li> <p>Shared folders are designed to allow application code to be edited on the host while being executed in containers. For non-code items such as cache directories or databases, the performance will be much better if they are stored in the Linux VM, using a <a href="/storage/volumes/">data volume</a> (named volume) or <a href="/storage/volumes/">data container</a>.</p> </li> <li> <p>Docker Desktop sets permissions to read/write/execute for users, groups and others <a href="http://permissions-calculator.org/decode/0777/">0777 or a+rwx</a>. This is not configurable. See <a href="/docker-for-windows/troubleshoot/#permissions-errors-on-data-directories-for-shared-volumes">Permissions errors on data directories for shared volumes</a>.</p> </li> <li> <p>Windows presents a case-insensitive view of the filesystem to applications while Linux is case-sensitive. On Linux it is possible to create 2 separate files: <code class="highlighter-rouge">test</code> and <code class="highlighter-rouge">Test</code>, while on Windows these filenames would actually refer to the same underlying file. This can lead to problems where an app works correctly on a developer Windows machine (where the file contents are shared) but fails when run in Linux in production (where the file contents are distinct). To avoid this, Docker Desktop insists that all shared files are accessed as their original case. Therefore if a file is created called <code class="highlighter-rouge">test</code>, it must be opened as <code class="highlighter-rouge">test</code>. Attempts to open <code class="highlighter-rouge">Test</code> will fail with ‚ÄúNo such file or directory‚Äù. Similarly once a file called <code class="highlighter-rouge">test</code> is created, attempts to create a second file called <code class="highlighter-rouge">Test</code> will fail.</p> </li> </ul> </blockquote> <h4 id="shared-folders-on-demand">Shared folders on demand</h4> <p>You can share a folder ‚Äúon demand‚Äù the first time a particular folder is used by a container.</p> <p>If you run a Docker command from a shell with a volume mount (as shown in the example below) or kick off a Compose file that includes volume mounts, you get a popup asking if you want to share the specified folder.</p> <p>You can select to <strong>Share it</strong>, in which case it is added your Docker Desktop Shared Folders list and available to containers. Alternatively, you can opt not to share it by selecting <strong>Cancel</strong>.</p> <p><img src="/docker-for-windows/images/shared-folder-on-demand.png" alt="Shared folder on demand" width="600px"></p> <h4 id="proxies">Proxies</h4> <p>Docker Desktop lets you configure HTTP/HTTPS Proxy Settings and automatically propagates these to Docker. For example, if you set your proxy settings to <code class="highlighter-rouge">http://proxy.example.com</code>, Docker uses this proxy when pulling containers.</p> <p>Your proxy settings, however, will not be propagated into the containers you start. If you wish to set the proxy settings for your containers, you need to define environment variables for them, just like you would do on Linux, for example:</p> <pre><code class="language-ps">&gt; docker run -e HTTP_PROXY=http://proxy.example.com:3128 alpine env PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin HOSTNAME=b7edf988b2b5 TERM=xterm HOME=/root HTTP_PROXY=http://proxy.example.com:3128 </code></pre> <p>For more information on setting environment variables for running containers, see <a href="/engine/reference/commandline/run/#set-environment-variables--e---env---env-file">Set environment variables</a>.</p> <h4 id="network">Network</h4> <blockquote> <p><strong>Note</strong></p> <p>The Network tab is not available in Windows container mode because networking is managed by Windows.</p> </blockquote> <p>You can configure Docker Desktop networking to work on a virtual private network (VPN). Specify a network address translation (NAT) prefix and subnet mask to enable Internet connectivity.</p> <p><strong>DNS Server</strong>: You can configure the DNS server to use dynamic or static IP addressing.</p> <blockquote> <p><strong>Note</strong>: Some users reported problems connecting to Docker Hub on Docker Desktop Stable version. This would manifest as an error when trying to run <code class="highlighter-rouge">docker</code> commands that pull images from Docker Hub that are not already downloaded, such as a first time run of <code class="highlighter-rouge">docker run hello-world</code>. If you encounter this, reset the DNS server to use the Google DNS fixed address: <code class="highlighter-rouge">8.8.8.8</code>. For more information, see <a href="/docker-for-windows/troubleshoot/#networking-issues">Networking issues</a> in Troubleshooting.</p> </blockquote> <p>Updating these settings requires a reconfiguration and reboot of the Linux VM.</p> <h4 id="wsl-integration">WSL Integration</h4> <p>In WSL 2 mode, you can configure which WSL 2 distributions will have the Docker WSL integration.</p> <p>By default, the integration will be enabled on your default WSL distribution. To change your default WSL distro, run <code class="highlighter-rouge">wsl --set-default &lt;distro name&gt;</code>. (For example, to set Ubuntu as your default WSL distro, run <code class="highlighter-rouge">wsl --set-default ubuntu</code>).</p> <p>You can also select any additional distributions you would like to enable the WSL 2 integration on.</p> <p>For more details on configuring Docker Desktop to use WSL 2, see <a href="/docker-for-windows/wsl/">Docker Desktop WSL 2 backend</a>.</p> <h3 id="docker-engine">Docker Engine<a href="#docker-engine" class="anchorLink">üîó</a></h3> <p>The Docker Engine page allows you to configure the Docker daemon to determine how your containers run.</p> <p>Type a JSON configuration file in the box to configure the daemon settings. For a full list of options, see the Docker Engine <a href="/engine/reference/commandline/dockerd/" target="_blank" class="_">dockerd commandline reference</a>.</p> <p>Click <strong>Apply &amp; Restart</strong> to save your settings and restart Docker Desktop.</p> <h3 id="command-line">Command Line<a href="#command-line" class="anchorLink">üîó</a></h3> <p>On the Command Line page, you can specify whether or not to enable experimental features.</p> <p>On both Docker Desktop Edge and Stable releases, you can toggle the experimental features on and off. If you toggle the experimental features off, Docker Desktop uses the current generally available release of Docker Engine.</p> <h4 id="experimental-features">Experimental features</h4> <p>Docker Desktop Edge releases have the experimental version of Docker Engine enabled by default, described in the <a href="https://github.com/docker/cli/blob/master/experimental/README.md">Docker Experimental Features README</a> on GitHub.</p> <!-- This text will be included in the CLI plugin docs that are marked as experimental in Docker Enterprise 3.0 release --> <p>Experimental features provide early access to future product functionality. These features are intended for testing and feedback only as they may change between releases without warning or can be removed entirely from a future release. Experimental features must not be used in production environments. Docker does not offer support for experimental features.</p> <blockquote class="important"> <p>To enable experimental features in the Docker CLI, edit the <code class="highlighter-rouge">config.json</code> file and set <code class="highlighter-rouge">experimental</code> to enabled.</p> <p>To enable experimental features from the Docker Desktop menu, click <strong>Settings</strong> (<strong>Preferences</strong> on macOS) &gt; <strong>Command Line</strong> and then turn on the <strong>Enable experimental features</strong> toggle. Click <strong>Apply &amp; Restart</strong>.</p> </blockquote> <p>For a list of current experimental features in the Docker CLI, see <a href="https://github.com/docker/cli/blob/master/experimental/README.md">Docker CLI Experimental features</a>.</p> <p>Run <code class="highlighter-rouge">docker version</code> to verify whether you have enabled experimental features. Experimental mode is listed under <code class="highlighter-rouge">Server</code> data. If <code class="highlighter-rouge">Experimental</code> is <code class="highlighter-rouge">true</code>, then Docker is running in experimental mode, as shown here:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> docker version Client: Docker Engine - Community Version: 19.03.1 API version: 1.40 Go version: go1.12.5 Git commit: 74b1e89 Built: Thu Jul 25 21:17:08 2019 OS/Arch: windows/amd64 Experimental: <span class="nb">true </span>Server: Docker Engine - Community Engine: Version: 19.03.1 API version: 1.40 <span class="o">(</span>minimum version 1.12<span class="o">)</span> Go version: go1.12.5 Git commit: 74b1e89 Built: Thu Jul 25 21:17:52 2019 OS/Arch: linux/amd64 Experimental: <span class="nb">true </span>containerd: Version: v1.2.6 GitCommit: 894b81a4b802e4eb2a91d1ce216b8817763c29fb runc: Version: 1.0.0-rc8 GitCommit: 425e105d5a03fabd737a126ad93d62a9eeede87f docker-init: Version: 0.18.0 GitCommit: fec3683 </code></pre></div></div> <h3 id="kubernetes">Kubernetes<a href="#kubernetes" class="anchorLink">üîó</a></h3> <blockquote> <p><strong>Note</strong></p> <p>The Kubernetes tab is not available in Windows container mode.</p> </blockquote> <p>Docker Desktop includes a standalone Kubernetes server that runs on your Windows host, so that you can test deploying your Docker workloads on Kubernetes.</p> <p><img src="/docker-for-windows/images/settings-kubernetes.png" alt="Enable Kubernetes" width="750px"></p> <p>The Kubernetes client command, <code class="highlighter-rouge">kubectl</code>, is included and configured to connect to the local Kubernetes server. If you have <code class="highlighter-rouge">kubectl</code> already installed and pointing to some other environment, such as <code class="highlighter-rouge">minikube</code> or a GKE cluster, be sure to change context so that <code class="highlighter-rouge">kubectl</code> is pointing to <code class="highlighter-rouge">docker-desktop</code>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> kubectl config get-contexts <span class="o">&gt;</span> kubectl config use-context docker-desktop </code></pre></div></div> <p>To enable Kubernetes support and install a standalone instance of Kubernetes running as a Docker container, select <strong>Enable Kubernetes</strong>.</p> <p>To set Kubernetes as the <a href="/docker-for-mac/kubernetes/#override-the-default-orchestrator">default orchestrator</a>, select <strong>Deploy Docker Stacks to Kubernetes by default</strong>.</p> <p>By default, Kubernetes containers are hidden from commands like <code class="highlighter-rouge">docker service ls</code>, because managing them manually is not supported. To make them visible, select <strong>Show system containers (advanced)</strong>. Most users do not need this option.</p> <p>Click <strong>Apply &amp; Restart</strong> to save the settings. This instantiates images required to run the Kubernetes server as containers, and installs the <code class="highlighter-rouge">kubectl.exe</code> command in the path.</p> <ul> <li> <p>When Kubernetes is enabled and running, an additional status bar item displays at the bottom right of the Docker Desktop Settings dialog. The status of Kubernetes shows in the Docker menu and the context points to <code class="highlighter-rouge">docker-desktop</code>.</p> </li> <li> <p>To disable Kubernetes support at any time, clear the <strong>Enable Kubernetes</strong> check box. The Kubernetes containers are stopped and removed, and the <code class="highlighter-rouge">/usr/local/bin/kubectl</code> command is removed.</p> </li> <li> <p>To delete all stacks and Kubernetes resources, select <strong>Reset Kubernetes Cluster</strong>.</p> </li> <li> <p>If you installed <code class="highlighter-rouge">kubectl</code> by another method, and experience conflicts, remove it.</p> <p>For more information on using the Kubernetes integration with Docker Desktop, see <a href="/docker-for-windows/kubernetes/">Deploy on Kubernetes</a>.</p> </li> </ul> <h3 id="reset">Reset<a href="#reset" class="anchorLink">üîó</a></h3> <p>The <strong>Restart Docker Desktop</strong> and <strong>Reset to factory defaults</strong> options are now available on the <strong>Troubleshoot</strong> menu. For information, see <a href="/docker-for-windows/troubleshoot/">Logs and Troubleshooting</a>.</p> <h3 id="troubleshoot">Troubleshoot<a href="#troubleshoot" class="anchorLink">üîó</a></h3> <p>Visit our <a href="/docker-for-windows/troubleshoot/">Logs and Troubleshooting</a> guide for more details.</p> <p>Log on to our <a href="https://forums.docker.com/c/docker-for-windows">Docker Desktop for Windows forum</a> to get help from the community, review current user topics, or join a discussion.</p> <p>Log on to <a href="https://github.com/docker/for-win/issues">Docker Desktop for Windows issues on GitHub</a> to report bugs or problems and review community reported issues.</p> <p>For information about providing feedback on the documentation or update it yourself, see <a href="/opensource/">Contribute to documentation</a>.</p> <h2 id="switch-between-windows-and-linux-containers">Switch between Windows and Linux containers<a href="#switch-between-windows-and-linux-containers" class="anchorLink">üîó</a></h2> <p>From the Docker Desktop menu, you can toggle which daemon (Linux or Windows) the Docker CLI talks to. Select <strong>Switch to Windows containers</strong> to use Windows containers, or select <strong>Switch to Linux containers</strong> to use Linux containers (the default).</p> <p>For more information on Windows containers, refer to the following documentation:</p> <ul> <li> <p>Microsoft documentation on <a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/index">Windows containers</a>.</p> </li> <li> <p><a href="https://blog.docker.com/2016/09/build-your-first-docker-windows-server-container/">Build and Run Your First Windows Server Container (Blog Post)</a> gives a quick tour of how to build and run native Docker Windows containers on Windows 10 and Windows Server 2016 evaluation releases.</p> </li> <li> <p><a href="https://github.com/docker/labs/blob/master/windows/windows-containers/README.md">Getting Started with Windows Containers (Lab)</a> shows you how to use the <a href="https://github.com/aspnet/MusicStore/blob/dev/README.md">MusicStore</a> application with Windows containers. The MusicStore is a standard .NET application and, <a href="https://github.com/friism/MusicStore">forked here to use containers</a>, is a good example of a multi-container application.</p> </li> <li> <p>To understand how to connect to Windows containers from the local host, see <a href="/docker-for-windows/troubleshoot/#limitations-of-windows-containers-for-localhost-and-published-ports">Limitations of Windows containers for <code class="highlighter-rouge">localhost</code> and published ports</a></p> </li> </ul> <blockquote> <p>Settings dialog changes with Windows containers</p> <p>When you switch to Windows containers, the Settings dialog only shows those tabs that are active and apply to your Windows containers:</p> </blockquote> <ul> <li><a href="#general">General</a></li> <li><a href="#proxies">Proxies</a></li> <li><a href="#docker-daemon">Daemon</a></li> <li><a href="#reset">Reset</a></li> </ul> <p>If you set proxies or daemon configuration in Windows containers mode, these apply only on Windows containers. If you switch back to Linux containers, proxies and daemon configurations return to what you had set for Linux containers. Your Windows container settings are retained and become available again when you switch back.</p> <h2 id="dashboard">Dashboard<a href="#dashboard" class="anchorLink">üîó</a></h2> <p>The Docker Desktop Dashboard enables you to interact with containers and applications and manage the lifecycle of your applications directly from your machine. The Dashboard UI shows all running, stopped, and started containers with their state. It provides an intuitive interface to perform common actions to inspect and manage containers and Docker Compose applications. For more information, see <a href="/desktop/dashboard/">Docker Desktop Dashboard</a>.</p> <h2 id="docker-hub">Docker Hub<a href="#docker-hub" class="anchorLink">üîó</a></h2> <p>Select <strong>Sign in /Create Docker ID</strong> from the Docker Desktop menu to access your <a href="https://hub.docker.com/" target="_blank" class="_">Docker Hub</a> account. Once logged in, you can access your Docker Hub repositories directly from the Docker Desktop menu.</p> <p>For more information, refer to the following <a href="/docker-hub/" target="_blank" class="_">Docker Hub topics</a>:</p> <ul> <li><a href="/docker-hub/orgs/" target="_blank" class="_">Organizations and Teams in Docker Hub</a></li> <li><a href="/docker-hub/builds/" target="_blank" class="_">Builds and Images</a></li> </ul> <h3 id="two-factor-authentication">Two-factor authentication<a href="#two-factor-authentication" class="anchorLink">üîó</a></h3> <p>Docker Desktop enables you to sign into Docker Hub using two-factor authentication. Two-factor authentication provides an extra layer of security when accessing your Docker Hub account.</p> <p>You must enable two-factor authentication in Docker Hub before signing into your Docker Hub account through Docker Desktop. For instructions, see <a href="/docker-hub/2fa/">Enable two-factor authentication for Docker Hub</a>.</p> <p>After you have enabled two-factor authentication:</p> <ol> <li> <p>Go to the Docker Desktop menu and then select <strong>Sign in / Create Docker ID</strong>.</p> </li> <li> <p>Enter your Docker ID and password and click <strong>Sign in</strong>.</p> </li> <li> <p>After you have successfully signed in, Docker Desktop prompts you to enter the authentication code. Enter the six-digit code from your phone and then click <strong>Verify</strong>.</p> </li> </ol> <p><img src="/docker-for-windows/images/desktop-win-2fa.png" alt="Docker Desktop 2FA" width="500px"></p> <p>After you have successfully authenticated, you can access your organizations and repositories directly from the Docker Desktop menu.</p> <h2 id="adding-tls-certificates">Adding TLS certificates<a href="#adding-tls-certificates" class="anchorLink">üîó</a></h2> <p>You can add trusted <strong>Certificate Authorities (CAs)</strong> to your Docker daemon to verify registry server certificates, and <strong>client certificates</strong>, to authenticate to registries. For more information, see <a href="/docker-for-windows/faqs/#how-do-i-add-custom-ca-certificates">How do I add custom CA certificates?</a> and <a href="/docker-for-windows/faqs/#how-do-i-add-client-certificates">How do I add client certificates?</a> in the FAQs.</p> <h3 id="how-do-i-add-custom-ca-certificates">How do I add custom CA certificates?<a href="#how-do-i-add-custom-ca-certificates" class="anchorLink">üîó</a></h3> <p>Docker Desktop supports all trusted Certificate Authorities (CAs) (root or intermediate). Docker recognizes certs stored under Trust Root Certification Authorities or Intermediate Certification Authorities.</p> <p>Docker Desktop creates a certificate bundle of all user-trusted CAs based on the Windows certificate store, and appends it to Moby trusted certificates. Therefore, if an enterprise SSL certificate is trusted by the user on the host, it is trusted by Docker Desktop.</p> <p>To learn more about how to install a CA root certificate for the registry, see <a href="/engine/security/certificates/">Verify repository client with certificates</a> in the Docker Engine topics.</p> <h3 id="how-do-i-add-client-certificates">How do I add client certificates?<a href="#how-do-i-add-client-certificates" class="anchorLink">üîó</a></h3> <p>You can add your client certificates in <code class="highlighter-rouge">~/.docker/certs.d/&lt;MyRegistry&gt;:&lt;Port&gt;/client.cert</code> and <code class="highlighter-rouge">~/.docker/certs.d/&lt;MyRegistry&gt;:&lt;Port&gt;/client.key</code>. You do not need to push your certificates with <code class="highlighter-rouge">git</code> commands.</p> <p>When the Docker Desktop application starts, it copies the <code class="highlighter-rouge">~/.docker/certs.d</code> folder on your Windows system to the <code class="highlighter-rouge">/etc/docker/certs.d</code> directory on Moby (the Docker Desktop virtual machine running on Hyper-V).</p> <p>You need to restart Docker Desktop after making any changes to the keychain or to the <code class="highlighter-rouge">~/.docker/certs.d</code> directory in order for the changes to take effect.</p> <p>The registry cannot be listed as an <em>insecure registry</em> (see <a href="#docker-engine">Docker Daemon</a>). Docker Desktop ignores certificates listed under insecure registries, and does not send client certificates. Commands like <code class="highlighter-rouge">docker run</code> that attempt to pull from the registry produce error messages on the command line, as well as on the registry.</p> <p>To learn more about how to set the client TLS certificate for verification, see <a href="/engine/security/certificates/">Verify repository client with certificates</a> in the Docker Engine topics.</p> <h2 id="where-to-go-next">Where to go next<a href="#where-to-go-next" class="anchorLink">üîó</a></h2> <ul> <li> <p>Try out the walkthrough at <a href="/get-started/" target="_blank" class="_">Get Started</a>.</p> </li> <li> <p>Dig in deeper with <a href="https://github.com/docker/labs/">Docker Labs</a> example walkthroughs and source code.</p> </li> <li> <p>Refer to the <a href="/engine/reference/commandline/cli/" target="_blank" class="_">Docker CLI Reference Guide</a>.</p> </li> </ul> <!-- tags --> <span class="glyphicon glyphicon-tags" style="padding-right: 10px"></span><span style="vertical-align: 2px"><a href="/search/?q=windows">windows</a>, <a href="/search/?q=edge">edge</a>, <a href="/search/?q=tutorial">tutorial</a>, <a href="/search/?q=run">run</a>, <a href="/search/?q=docker">docker</a>, <a href="/search/?q=local">local</a>, <a href="/search/?q=machine">machine</a></span> <div id="ratings-div" style="color:#b9c2cc; text-align: center; margin-top: 150px;"> <div id="pd_rating_holder_8453675" style="display: inline-block;"><p style="padding: 0px; margin: 0px; clear: both;"></p></div> </div> </section>`,
        id: uuid(),
        name: 'How to use Docker',
        previewImageUrl: 'https://www.muycomputerpro.com/wp-content/uploads/2018/07/docker.png',
        status: 'Public',
    },
    {
        author: 'Admin',
        comments: [],
        // tslint:disable-next-line:max-line-length
        content: `<div class="w3-col l10 m12" id="main"> <div id="mainLeaderboard" style="overflow:hidden;"> <!-- MainLeaderboard--> <!--<pre>main_leaderboard, all: [728,90][970,90][320,50][468,60]</pre>--> <div id="snhb-main_leaderboard-0"><div id="google_ads_iframe_/22152718/sws-hb//w3schools.com//main_leaderboard_0__container__" style="border: 0pt none; width: 728px; height: 90px;"></div></div> <!-- adspace leaderboard --> </div> <h1>Node.js <span class="color_h1">Get Started</span></h1> <div class="w3-clear nextprev"> </div> <hr> <h2>Download Node.js</h2> <p>The official Node.js website has installation instructions for Node.js: <a target="_blank" href="https://nodejs.org">https://nodejs.org</a></p> <hr> <h2>Getting Started</h2> <p>Once you have downloaded and installed Node.js on your computer, let's try to display "Hello World" in a web browser.</p> <p>Create a Node.js file named "myfirst.js", and add the following code:</p> <div class="w3-example"> <p>myfirst.js</p> <div class="w3-code notranslate jsHigh"><span class="jscolor" style="color:black"><span class="jsnumbercolor" style="color:red"> </span> <span class="jskeywordcolor" style="color:mediumblue">var</span> http = require(<span class="jsstringcolor" style="color:brown">'http'</span>);<br><br>http.<span class="jspropertycolor" style="color:black">createServer</span>(<span class="jskeywordcolor" style="color:mediumblue">function</span> (req, res) {<br>&nbsp;&nbsp;res.<span class="jspropertycolor" style="color:black">writeHead</span>(<span class="jsnumbercolor" style="color:red">200</span>, {<span class="jsstringcolor" style="color:brown">'Content-Type'</span>: <span class="jsstringcolor" style="color:brown">'text/html'</span>});<br><span class="jsnumbercolor" style="color:red"> </span> &nbsp; <span class="jsnumbercolor" style="color:red"> </span> res.<span class="jspropertycolor" style="color:black">end</span>(<span class="jsstringcolor" style="color:brown">'Hello World!'</span>);<br>}).<span class="jspropertycolor" style="color:black">listen</span>(<span class="jsnumbercolor" style="color:red">8080</span>); </span></div> </div> <p>Save the file on your computer: C:\\Users\\<em>Your Name\\</em>\\myfirst.js</p> <p>The code tells the computer to write "Hello World!" if anyone (e.g. a web browser) tries to access your computer on port 8080.</p> <p>For now, you do not have to understand the code. It will be explained later.</p> <hr> <h2>Command Line Interface</h2> <p>Node.js files must be initiated in the "Command Line Interface" program of your computer.</p> <p>How to open the command line interface on your computer depends on the operating system. For Windows users, press the start button and look for "Command Prompt", or simply write "cmd" in the search field.</p> <p>Navigate to the folder that contains the file "myfirst.js", the command line interface window should look something like this:</p> <div class="w3-example"> <div class="w3-code notranslate w3-black"> C:\\Users\\<em>Your Name</em>&gt;_ </div> </div> <hr> <h2>Initiate the Node.js File</h2> <p>The file you have just created must be initiated by Node.js before any action can take place.</p> <p>Start your command line interface, write <code class="w3-codespan">node myfirst.js</code> and hit enter:</p> <div class="w3-example"> <p>Initiate "myfirst.js":</p> <div class="w3-code notranslate w3-black"> C:\\Users\\<em>Your Name</em>&gt;node myfirst.js </div> </div> <p>Now, your computer works as a server!</p> <p>If anyone tries to access your computer on port 8080, they will get a "Hello World!" message in return!</p> <p>Start your internet browser, and type in the address: <a href="http://localhost:8080" target="_blank">http://localhost:8080</a></p> <br> <div class="w3-clear nextprev"> </div> </div>`,
        id: uuid(),
        name: 'Getting started NodeJS',
        previewImageUrl: 'https://miro.medium.com/max/4608/1*qwoA9FmZDrE5q--_9qqBCQ.jpeg',
        status: 'Public',
    },
    {
        author: 'Guest 00131',
        comments: [{
            author: 'Admin',
            id: uuid(),
            text: 'Good job!',
        }],
        // tslint:disable-next-line:max-line-length
        content: `<article id="post-25254" class="post-25254 post type-post status-publish format-standard has-post-thumbnail category-blockchain-bitcoin category-most-recent tag-cryptocurrency tag-bitcoin tag-ltc tag-ecommerce single-post-content has-thumbnail"> <div class="post-header post-tp-1-header"> <h1 class="single-post-title"> <span class="post-title" itemprop="headline">A Beginner‚Äôs Guide to Investing in Cryptocurrency</span></h1> <h2 class="post-subtitle">For first-time buyers of Bitcoin or another cryptocurrency, here is a concise explanation of what cryptocurrency is and an introduction to smart investment strategy.</h2> <div class="single-featured"> <a class="post-thumbnail open-lightbox" href="https://www.finance-monthly.com/Finance-Monthly/wp-content/uploads/2020/05/iStock-930264196-1.jpg" rel="prettyPhoto"><img alt="" class="b-loaded" src="https://www.finance-monthly.com/Finance-Monthly/wp-content/uploads/2020/05/iStock-930264196-1-750x430.jpg"> </a> </div> </div> <div class="entry-content clearfix single-post-content"> <p>Do you want to start investing in cryptocurrency but are not sure where to begin? You are not alone; many people want to get started with cryptocurrency but do not have much knowledge about this relatively new and complex form of currency that seems to be everywhere this day and age. As with any type of investing, you must have a clear understanding of how it works so that you can be smart with your money and make the right decisions. Here is what you need to know to get started investing in cryptocurrency.</p> <h2>What Is It?</h2> <p>So, what exactly is <a href="https://www.moneyadviceservice.org.uk/en/articles/bitcoin-cryptocurrencies" target="_blank" rel="noopener noreferrer">cryptocurrency</a>? This is, essentially, a digital asset designed to work as an online medium of exchange, which is secured by cryptography, which makes it practically impossible to forge or double-spend, and therefore is incredibly secure. Many are decentralised networks using blockchain technology and not issued by a central authority, so they are free from government interference.</p> <h2>The Market</h2> <p>As with any type of investing, it is essential to understand how the market moves before you get started. There are various coins to invest in, all of which affect one another, so it can be a complex marketplace. Some places are quite stable, such as LTC and <a href="https://www.bbc.co.uk/newsround/25622442" target="_blank" rel="noopener noreferrer">Bitcoin</a>, and these are a smart place to keep the majority of your holdings. You could then use a smaller percentage for coins with a higher reward potential but smaller market caps.</p> <div id="related-posts-ymal"><h4>You May also be Interested In:</h4> <a target="blank" href="https://www.finance-monthly.com/2020/04/bitcoin-expected-to-thrive-amidst-market-panic/" rel="bookmark" title="Permanent Link to Bitcoin Expected to Thrive Amidst Market Panic">Bitcoin Expected to Thrive Amidst Market Panic</a> <a target="blank" href="https://www.finance-monthly.com/2020/03/the-impact-of-digital-currencies-on-the-uk-economy-in-2020/" rel="bookmark" title="Permanent Link to The Impact of Digital Currencies on the UK Economy in 2020">The Impact of Digital Currencies on the UK Economy in 2020</a> </div> <h2>Research and Watch the Markets</h2> <p>Again, as with any type of investing, research and patience will be helpful when investing in cryptocurrency. You should research the teams behind different coins and understand what their vision and goals are, which should help you to identify those that have good potential. It would be smart to then study the charts of the coins that you want to invest in for a few months ‚Äì it can be extremely volatile, so you will want to have an idea of the price range and pick a good entry point.</p> <h2>Get Expert Guidance</h2> <p>Investing in cryptocurrency can be complicated and confusing, but there are a lot of helpful experts out there that can help you to make intelligent decisions with your money. You can receive <a href="https://altsignals.io/" target="_blank" rel="noopener noreferrer">live bitcoin trading signals</a> from experts along with helpful tools that will help you to make the right decision at the right time to see your wealth grow.</p> <h2>Start Off Small</h2> <p>It is an idea to test the waters at first and to start off small. Everyone takes losses at some point, and this is how you learn how to be smarter with your investments, so starting off small, being patient, and making sure that you are learning as you go will be critical for future success in cryptocurrency investment.</p> <p>Hopefully, this post will give you the information and confidence that you need to get started investing in cryptocurrency and to begin building your knowledge while finding some early success with trading.</p> </div> <div class="post-tp-1-header"> <div class="post-meta-wrap clearfix"> <div class="term-badges "><span class="term-badge term-50"></span></div><div class="post-meta single-post-meta"> <a title="Browse Author Articles" class="post-author-a post-author-avatar"> </a> <span class="time"><time class="post-published updated" datetime="2020-05-11T14:02:20+01:00">On <b>May 11, 2020</b></time></span> <a href="https://www.finance-monthly.com/2020/05/a-beginners-guide-to-investing-in-cryptocurrency/#respond" title="Leave a comment on: ‚ÄúA Beginner‚Äôs Guide to Investing in Cryptocurrency‚Äù" class="comments"><i class="fa fa-comments-o"></i> 0</a></div> </div> </div> <div class="post-share single-post-share bottom-share clearfix style-1"> <div class="post-share-btn-group"> <a href="https://www.finance-monthly.com/2020/05/a-beginners-guide-to-investing-in-cryptocurrency/#respond" class="post-share-btn post-share-btn-comments comments" title="Leave a comment on: ‚ÄúA Beginner‚Äôs Guide to Investing in Cryptocurrency‚Äù"><i class="bf-icon fa fa-comments" aria-hidden="true"></i> <b class="number">0</b></a> </div> <div class="share-handler-wrap bs-pretty-tabs bs-pretty-tabs-initialized"> <span class="share-handler post-share-btn rank-default"> <i class="bf-icon fa fa-share-alt"></i> <b class="text">Share</b> </span> </ul></span></div> </div> </article>`,
        id: uuid(),
        name: 'Crypto currency guide',
        // tslint:disable-next-line:max-line-length
        previewImageUrl: 'https://static.vecteezy.com/system/resources/previews/000/683/025/original/cryptocurrency-concept-background.jpg',
        status: 'Private',
    },
];

export class PostDB extends GenericDatabase<Post> {
    constructor(postList: Post[]) {
        super(postList);
    }

    public get posts() {
        return this.list;
    }

    public filter(expression: any): Post[] {
        return this.filter(expression);
    }

    public add(post: Post): Post {
        post.id = uuid();
        post.comments = post.comments || [];
        this.entities.push(post);

        return post;
    }

    public remove(postId: string): void {
        this.entities = this.entities.filter((m: Post) => m.id !== postId);
    }

    public addComment(postId: string, comment: Comment): Comment | null {
        const existingPostIndex: number = this.entities.findIndex((m: Post) => m.id === postId);
        if (existingPostIndex >= 0) {
            comment.id = uuid();
            this.entities[existingPostIndex].comments.push(comment);

            return comment;
        }

        return null;
    }
}

const postDBInstance = new PostDB(posts);

export default postDBInstance;
